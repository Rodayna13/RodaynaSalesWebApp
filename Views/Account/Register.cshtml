@model SalesWebApp.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<div class="register-container">
    <div class="register-card">
        <h2 id="title">@ViewBag.Title</h2>
        <h3>@ViewBag.Message</h3>

        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { id = "registerForm", @class = "needs-validation", novalidate = "true" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-group mb-4">
                @Html.LabelFor(m => m.Username, new { @class = "mb-2" })
                @Html.TextBoxFor(m => m.Username, new { @class = "form-control ", required = "required" })
                @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
            </div>

            <div class="form-group position-relative mb-4">
                @Html.LabelFor(m => m.Password, new { @class = "mb-2" })
                <div class="input-group">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control ", id = "password-input", required = "required" })
                    <span class="input-group-text toggle-password">
                        <i class="fa fa-eye-slash" aria-hidden="true"></i>
                    </span>
                </div>
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>

            <div class="form-group position-relative mb-4">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "mb-2" })
                <div class="input-group">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", id = "confirm-password-input", required = "required" })
                    <span class="input-group-text toggle-confirm-password">
                        <i class="fa fa-eye-slash" aria-hidden="true"></i>
                    </span>
                </div>
                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
            </div>

            <button type="submit" class="btn btn-prim  custom-btn mt-4">Register</button>
            <p class="mt-3 text-left">Already have an account? <a href="@Url.Action("Login", "Account")">Login here</a></p>
        }
    </div>
</div>

@if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
{
    <div class="alert alert-danger mt-3">@ViewBag.ErrorMessage</div>
}

@section scripts {
    <script>
        $(document).ready(function () {
            $('.toggle-password').click(function () {
                var passwordField = $('#password-input');
                var type = passwordField.attr('type') === 'password' ? 'text' : 'password';
                passwordField.attr('type', type);
                $(this).find('i').toggleClass('fa-eye-slash fa-eye');
            });

            $('.toggle-confirm-password').click(function () {
                var confirmPasswordField = $('#confirm-password-input');
                var type = confirmPasswordField.attr('type') === 'password' ? 'text' : 'password';
                confirmPasswordField.attr('type', type);
                $(this).find('i').toggleClass('fa-eye-slash fa-eye');
            });

            $('#registerForm').validate({
                rules: {
                    Username: {
                        required: true
                    },
                    Password: {
                        required: true,
                        minlength: 8,
                        pattern: /^(?=.*[a-zA-Z])(?=.*\d)(?=.*[^a-zA-Z\d]).+$/
                    },
                    ConfirmPassword: {
                        required: true,
                        equalTo: "#password-input"
                    }
                },
                messages: {
                    Username: "Username is required.",
                    Password: {
                        required: "Password is required.",
                        minlength: "Password must be at least 8 characters long.",
                        pattern: "Password must contain numbers, letters, and special characters."
                    },
                    ConfirmPassword: {
                        required: "Confirm Password is required.",
                        equalTo: "Passwords do not match."
                    }
                },
                errorElement: 'div',
                errorPlacement: function (error, element) {
                    error.addClass('text-danger');
                    error.insertAfter(element);
                }
            });
        });
    </script>
}

<style>

    .register-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100%;
        padding-top: 10%;
        padding-bottom: 10%;
    }

    .register-card {
        background-color: rgba(255, 255, 255, 0.9);
        padding: 40px; /* Increased padding */
        border-radius: 8px;
        width: 75%; /* Allow full width for larger screens */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        text-align: center;
        max-width: 75%;
    }

    #title {
        color: linear-gradient(135deg, #4b6cb7 0%, #182848 100%);
        font-weight: bold;
        font-size: 30px; /* Increase font size for larger title */
    }

    .custom-btn {
        width: 100%;
        max-width: 100%; /* Make the button a little wider */
        padding: 12px; /* Increase button padding */
        background: linear-gradient(135deg, #4b6cb7 0%, #182848 100%);
        color: white;
        font-weight: bold;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .form-group {
        margin-bottom: 20px; /* Increase form group margin for more spacing */
        text-align: left;
    }

    .input-group-text {
        background-color: transparent;
        border: none;
    }

    .btn:hover {
        background-color: #0284c7;
    }

    .form-control 
    {
        width:100%;
        max-width:100%;
    }
    .toggle-password {
        border: 2px solid rgba(0, 0, 0, 0.2);
    }
    .toggle-confirm-password {
        border: 2px solid rgba(0, 0, 0, 0.2);
    }
</style>
